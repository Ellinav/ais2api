# .github/workflows/docker-publish.yml (最终修正版)
name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Docker image version tag (e.g., v1.1, v1.2-beta)'
        required: true
        default: 'v1.1-testing'
      update_latest:
        description: 'Update the "latest" tag as well?'
        type: boolean
        default: false

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- 新增：使用官方 Action 智能生成 Docker 标签 ---
      # 这个 action 会根据您的输入自动、可靠地生成标签列表
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ellinalopez/cloud-studio # 您的 Docker Hub 仓库名
          tags: |
            # 规则1: 您在输入框中填写的版本号，总是会被添加
            ${{ github.event.inputs.version }}
            # 规则2: 只有当 update_latest 复选框被勾选时，才添加 "latest" 标签
            ${{ github.event.inputs.update_latest == true && 'latest' || '' }}

      - name: Get Camoufox Download URL
        id: get_camoufox_url
        run: |
          URL=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest" | grep "browser_download_url.*camoufox-linux.tar.gz" | cut -d : -f 2,3 | tr -d '", ')
          echo "CAMOUFOX_URL=$URL" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # --- 核心修改：使用上面步骤自动生成的标签 ---
          # 它会自动包含 v1.1 和 latest (如果勾选了)
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CAMOUFOX_URL=${{ env.CAMOUFOX_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
